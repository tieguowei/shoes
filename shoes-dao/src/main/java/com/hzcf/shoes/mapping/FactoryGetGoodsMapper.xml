<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzcf.shoes.dao.FactoryGetGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.hzcf.shoes.model.FactoryGetGoods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="factory_name" property="factoryName" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="operator" property="operator" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, factory_name, time, money, remark, status, create_time, update_time, operator
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hzcf.shoes.model.FactoryGetGoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zly_factory_get_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from zly_factory_get_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from zly_factory_get_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hzcf.shoes.model.FactoryGetGoodsExample" >
    delete from zly_factory_get_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hzcf.shoes.model.FactoryGetGoods" >
    insert into zly_factory_get_goods (id, factory_name, time, 
      money, remark, status, 
      create_time, update_time, operator
      )
    values (#{id,jdbcType=INTEGER}, #{factoryName,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{money,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hzcf.shoes.model.FactoryGetGoods" >
    insert into zly_factory_get_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="factoryName != null" >
        factory_name,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="operator != null" >
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="factoryName != null" >
        #{factoryName,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hzcf.shoes.model.FactoryGetGoodsExample" resultType="java.lang.Integer" >
    select count(*) from zly_factory_get_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update zly_factory_get_goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.factoryName != null" >
        factory_name = #{record.factoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null" >
        operator = #{record.operator,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update zly_factory_get_goods
    set id = #{record.id,jdbcType=INTEGER},
      factory_name = #{record.factoryName,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      money = #{record.money,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzcf.shoes.model.FactoryGetGoods" >
    update zly_factory_get_goods
    <set >
      <if test="factoryName != null" >
        factory_name = #{factoryName,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzcf.shoes.model.FactoryGetGoods" >
    update zly_factory_get_goods
    set factory_name = #{factoryName,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      money = #{money,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <!-- 鞋厂取货列表分页 -->
  <select id="findAllRetMapByPage" resultType="hashmap" parameterType="hashmap">
	  SELECT
		id,
		factory_name,
		DATE_FORMAT(time, '%Y-%m-%d') time,
		money,
		remark,
		status,
		CASE
		WHEN STATUS = '0' THEN
			'是'
		ELSE
			'否'
		END statusZH
	FROM
	zly_factory_get_goods
	where 1 =1
	<if test="factoryName != null">
		and factory_name = #{factoryName} 
	</if> 
		limit #{startIndex},#{pageSize}
  </select>
  
  <!-- 鞋厂取货列表分页总数 -->
  <select id="findAllByPageCount" resultType="long" parameterType="hashmap">
  select COUNT(id) from zly_factory_get_goods
	where 1 =1
	<if test="factoryName != null">
		and factory_name = #{factoryName} 
	</if> 
  </select>
  
  <select id="selectById" parameterType="int" resultType="hashmap">
  SELECT
		id,
		factory_name,
		DATE_FORMAT(time, '%Y-%m-%d') time,
		money,
		remark,
		status
	FROM
		zly_factory_get_goods
	where id = #{id}
  </select>
  <select id="getPickListByFactory" parameterType="hashmap" resultType="java.util.LinkedHashMap">
   SELECT
		id,
		factory_name,
		DATE_FORMAT(time, '%Y-%m-%d') time,
		money,
		remark,
		status
	FROM
		zly_factory_get_goods
	where factory_name = #{factoryName} 
   and status = '1'
   <if test="minCreateTime != null">
      <![CDATA[
 		AND DATE_FORMAT(time ,'%Y-%m-%d') >= #{minCreateTime}
 		]]>
    </if>
    <if test="maxCreateTime != null">
      <![CDATA[
 		AND DATE_FORMAT(time ,'%Y-%m-%d') <= #{maxCreateTime}
 	]]>
    </if>
  </select>
  
  <!-- 取回记录汇总 -->
  <select id="getPickSum" parameterType="hashmap" resultType="hashmap">
  SELECT
		sum(money) money
	FROM
		zly_factory_get_goods
	where factory_name = #{factoryName} 
   and status = '1'
   <if test="minCreateTime != null">
      <![CDATA[
 		AND DATE_FORMAT(time ,'%Y-%m-%d') >= #{minCreateTime}
 		]]>
    </if>
    <if test="maxCreateTime != null">
      <![CDATA[
 		AND DATE_FORMAT(time ,'%Y-%m-%d') <= #{maxCreateTime}
 	]]>
  </select>
  <!-- 修改取货状态 -->
  <update id="updatePickStatus" parameterType="hashmap">
	UPDATE zly_factory_get_goods
	SET `status` =#{status}
	WHERE
		where factory_name = #{factoryName} 
  <if test="minCreateTime != null">
      <![CDATA[
 		AND DATE_FORMAT(time ,'%Y-%m-%d') >= #{minCreateTime}
 		]]>
    </if>
    <if test="maxCreateTime != null">
      <![CDATA[
 		AND DATE_FORMAT(time ,'%Y-%m-%d') <= #{maxCreateTime}
 	]]>
  
  </update>
</mapper>