<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzcf.shoes.dao.PropertiesMapper" >
  <resultMap id="BaseResultMap" type="com.hzcf.shoes.model.Properties" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="property_name" property="propertyName" jdbcType="VARCHAR" />
    <result column="property_string_value" property="propertyStringValue" jdbcType="VARCHAR" />
    <result column="property_figure_value" property="propertyFigureValue" jdbcType="DECIMAL" />
    <result column="property_desc" property="propertyDesc" jdbcType="VARCHAR" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, property_name, property_string_value, property_figure_value, property_desc, update_user_id, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hzcf.shoes.model.PropertiesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ssm_properties
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hzcf.shoes.model.PropertiesExample" >
    delete from ssm_properties
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hzcf.shoes.model.Properties" >
    insert into ssm_properties (id, property_name, property_string_value, 
      property_figure_value, property_desc, update_user_id, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{propertyName,jdbcType=VARCHAR}, #{propertyStringValue,jdbcType=VARCHAR}, 
      #{propertyFigureValue,jdbcType=DECIMAL}, #{propertyDesc,jdbcType=VARCHAR}, #{updateUserId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hzcf.shoes.model.Properties" >
    insert into ssm_properties
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="propertyName != null" >
        property_name,
      </if>
      <if test="propertyStringValue != null" >
        property_string_value,
      </if>
      <if test="propertyFigureValue != null" >
        property_figure_value,
      </if>
      <if test="propertyDesc != null" >
        property_desc,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="propertyName != null" >
        #{propertyName,jdbcType=VARCHAR},
      </if>
      <if test="propertyStringValue != null" >
        #{propertyStringValue,jdbcType=VARCHAR},
      </if>
      <if test="propertyFigureValue != null" >
        #{propertyFigureValue,jdbcType=DECIMAL},
      </if>
      <if test="propertyDesc != null" >
        #{propertyDesc,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hzcf.shoes.model.PropertiesExample" resultType="java.lang.Integer" >
    select count(*) from ssm_properties
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ssm_properties
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.propertyName != null" >
        property_name = #{record.propertyName,jdbcType=VARCHAR},
      </if>
      <if test="record.propertyStringValue != null" >
        property_string_value = #{record.propertyStringValue,jdbcType=VARCHAR},
      </if>
      <if test="record.propertyFigureValue != null" >
        property_figure_value = #{record.propertyFigureValue,jdbcType=DECIMAL},
      </if>
      <if test="record.propertyDesc != null" >
        property_desc = #{record.propertyDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ssm_properties
    set id = #{record.id,jdbcType=INTEGER},
      property_name = #{record.propertyName,jdbcType=VARCHAR},
      property_string_value = #{record.propertyStringValue,jdbcType=VARCHAR},
      property_figure_value = #{record.propertyFigureValue,jdbcType=DECIMAL},
      property_desc = #{record.propertyDesc,jdbcType=VARCHAR},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <!--  理财机构对应关系列表分页 -->
  <select id="findAllRetMapByPage" resultType="hashmap" parameterType="hashmap">
  	SELECT
	<include refid="Base_Column_List" />	
	FROM
	ssm_properties
WHERE
	1 = 1
	limit #{startIndex},#{pageSize}
  </select>
  
   <!--理财机构对应关系分页总数 -->
  <select id="findAllByPageCount" resultType="long" parameterType="hashmap">
  	SELECT COUNT(*) FROM ssm_properties
	WHERE 1=1
  </select>
  
   <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ssm_properties
    where id = #{id,jdbcType=INTEGER}
  </select>
  <update id="doUpdateProperty" parameterType="hashmap">
  update ssm_properties
    set 
      property_string_value = #{propertyStringValue},
      property_figure_value = #{propertyFigureValue},
      update_user_id = #{updateUserId},
      update_time = #{updateTime}
      where id = #{id}
  </update>
  <select id="findValueByPropertyName" parameterType="hashmap" resultMap="BaseResultMap">
   select 
    <include refid="Base_Column_List" />
    from ssm_properties
     where  property_name =#{property_name}
  </select>
  
</mapper>